volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local
  postgres-transaction-file:
    driver: local
  metabase-data:
    driver: local

services:
  postgres:
    image: postgres
    container_name: postgres-db
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra:
    image: kestra/kestra:latest
    pull_policy: always
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    # To run Kestra in a rootless mode in production, see: https://kestra.io/docs/installation/podman-compose
    user: "root"
    command: server standalone
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_started


  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
    networks:
      - default
    ports:
      - "5050:80"
    depends_on:
      postgres_files:
        condition: service_started

  postgres_files:
    image: postgres:17-alpine
    container_name: postgres-transaction-file
    volumes:
      - "postgres-transaction-file:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: transaction_file
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"

  metabase-db:
    image: postgres:15
    environment:
      POSTGRES_USER: metabase
      POSTGRES_PASSWORD: mbpass
      POSTGRES_DB: metabase
    volumes:
      - metabase-data:/var/lib/postgresql/data

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    platform: linux/amd64
    ports:
      - "3000:3000"
    depends_on:
      postgres_files:
        condition: service_started
      metabase-db:
        condition: service_started
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase
      MB_DB_PASS: mbpass
      MB_DB_HOST: metabase-db
    
    

networks:
  default:
    driver: bridge

